{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACCESS\\\\Desktop\\\\RideRental\\\\riderental\\\\src\\\\UI\\\\Payment.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements, PaymentRequestButtonElement } from '@stripe/react-stripe-js';\nimport axios from 'axios';\n\n// Replace with your Stripe public key\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('your-publishable-key-here');\nconst CheckoutForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const handlePaymentRequest = async paymentRequest => {\n    const {\n      data: clientSecret\n    } = await axios.post('http://localhost:9093/paymentverification', {\n      // Add any additional data you need to send to the server\n    });\n    const {\n      error\n    } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        return_url: 'https://your-website.com/checkout/complete' // Replace with your return URL\n      }\n    });\n    if (error) {\n      console.error(error.message);\n    }\n  };\n  const paymentRequest = stripe === null || stripe === void 0 ? void 0 : stripe.paymentRequest({\n    country: 'US',\n    currency: 'usd',\n    total: {\n      label: 'Total',\n      amount: 1099 // Amount in cents\n    },\n    requestPayerName: true,\n    requestPayerEmail: true\n  });\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    try {\n      const {\n        data: clientSecret\n      } = await axios.post('http://localhost:9093/paymentverification', {\n        // Add any additional data you need to send to the server\n      });\n      const {\n        error,\n        paymentIntent\n      } = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement),\n          billing_details: {\n            name: 'Customer Name'\n          }\n        }\n      });\n      if (error) {\n        console.error(error.message);\n      } else if (paymentIntent.status === 'succeeded') {\n        console.log('Payment successful!');\n      }\n    } catch (error) {\n      console.error('Payment failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !stripe,\n        children: \"Pay Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), paymentRequest && /*#__PURE__*/_jsxDEV(PaymentRequestButtonElement, {\n      options: {\n        paymentRequest,\n        style: {\n          paymentRequestButton: {\n            theme: 'dark',\n            height: '64px'\n          }\n        }\n      },\n      onClick: () => handlePaymentRequest(paymentRequest)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckoutForm, \"EKvoGMX7lxsZ5SGPpYu2aKFzClQ=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nexport const Payment = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"payment-container\",\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Make Payment\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Payment Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Elements, {\n      stripe: stripePromise,\n      children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 101,\n  columnNumber: 3\n}, this);\n_c2 = Payment;\nvar _c, _c2;\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"Payment\");","map":{"version":3,"names":["React","loadStripe","Elements","CardElement","useStripe","useElements","PaymentRequestButtonElement","axios","jsxDEV","_jsxDEV","stripePromise","CheckoutForm","_s","stripe","elements","handlePaymentRequest","paymentRequest","data","clientSecret","post","error","confirmPayment","confirmParams","return_url","console","message","country","currency","total","label","amount","requestPayerName","requestPayerEmail","handleSubmit","event","preventDefault","paymentIntent","confirmCardPayment","payment_method","card","getElement","billing_details","name","status","log","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","options","style","paymentRequestButton","theme","height","onClick","_c","Payment","className","_c2","$RefreshReg$"],"sources":["C:/Users/ACCESS/Desktop/RideRental/riderental/src/UI/Payment.js"],"sourcesContent":["import React from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { Elements, CardElement, useStripe, useElements, PaymentRequestButtonElement } from '@stripe/react-stripe-js';\r\nimport axios from 'axios';\r\n\r\n// Replace with your Stripe public key\r\nconst stripePromise = loadStripe('your-publishable-key-here');\r\n\r\nconst CheckoutForm = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const handlePaymentRequest = async (paymentRequest) => {\r\n    const { data: clientSecret } = await axios.post('http://localhost:9093/paymentverification', {\r\n      // Add any additional data you need to send to the server\r\n    });\r\n\r\n    const { error } = await stripe.confirmPayment({\r\n      elements,\r\n      confirmParams: {\r\n        return_url: 'https://your-website.com/checkout/complete', // Replace with your return URL\r\n      },\r\n    });\r\n\r\n    if (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const paymentRequest = stripe?.paymentRequest({\r\n    country: 'US',\r\n    currency: 'usd',\r\n    total: {\r\n      label: 'Total',\r\n      amount: 1099, // Amount in cents\r\n    },\r\n    requestPayerName: true,\r\n    requestPayerEmail: true,\r\n  });\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { data: clientSecret } = await axios.post('http://localhost:9093/paymentverification', {\r\n        // Add any additional data you need to send to the server\r\n      });\r\n\r\n      const { error, paymentIntent } = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n          billing_details: {\r\n            name: 'Customer Name',\r\n          },\r\n        },\r\n      });\r\n\r\n      if (error) {\r\n        console.error(error.message);\r\n      } else if (paymentIntent.status === 'succeeded') {\r\n        \r\n        console.log('Payment successful!');\r\n      }\r\n    } catch (error) {\r\n      console.error('Payment failed:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <CardElement />\r\n        <button type=\"submit\" disabled={!stripe}>\r\n          Pay Now\r\n        </button>\r\n      </form>\r\n\r\n      {paymentRequest && (\r\n        <PaymentRequestButtonElement\r\n          options={{\r\n            paymentRequest,\r\n            style: {\r\n              paymentRequestButton: {\r\n                theme: 'dark',\r\n                height: '64px',\r\n              },\r\n            },\r\n          }}\r\n          onClick={() => handlePaymentRequest(paymentRequest)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Payment = () => (\r\n  <div className=\"payment-container\">\r\n    <h2>Make Payment</h2>\r\n    <div className=\"payment-form-container\">\r\n      <h1>Payment Details</h1>\r\n      <Elements stripe={stripePromise}>\r\n        <CheckoutForm />\r\n      </Elements>\r\n    </div>\r\n  </div>\r\n);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}