{"ast":null,"code":"// import React from 'react';\n// import { loadStripe } from '@stripe/stripe-js';\n// import { Elements, CardElement, useStripe, useElements, PaymentRequestButtonElement } from '@stripe/react-stripe-js';\n// import axios from 'axios';\n\n// // Replace with your new Stripe public key\n// const stripePromise = loadStripe('your-new-publishable-key-here');\n\n// const CheckoutForm = () => {\n//   const stripe = useStripe();\n//   const elements = useElements();\n\n//   const handlePaymentRequest = async (paymentRequest) => {\n//     try {\n//       const { data: clientSecret } = await axios.post('http://localhost:9093/paymentverification', {\n\n//       });\n\n//       const { error } = await stripe.confirmPayment({\n//         elements,\n//         confirmParams: {\n//           return_url: 'https://your-website.com/checkout/complete', // Replace with your return URL\n//         },\n//       });\n\n//       if (error) {\n//         console.error(error.message);\n//       }\n//     } catch (error) {\n//       console.error('Payment failed:', error);\n//     }\n//   };\n\n//   const paymentRequest = stripe?.paymentRequest({\n//     country: 'US',\n//     currency: 'usd',\n//     total: {\n//       label: 'Total',\n//       amount: 1099, // Amount in cents\n//     },\n//     requestPayerName: true,\n//     requestPayerEmail: true,\n//   });\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     if (!stripe || !elements) {\n//       return;\n//     }\n\n//     try {\n//       const { data: clientSecret } = await axios.post('http://localhost:9093/paymentverification', {\n\n//       });\n\n//       const { error, paymentIntent } = await stripe.confirmCardPayment(clientSecret, {\n//         payment_method: {\n//           card: elements.getElement(CardElement),\n//           billing_details: {\n//             name: 'Customer Name',\n//           },\n//         },\n//       });\n\n//       if (error) {\n//         console.error(error.message);\n//       } else if (paymentIntent.status === 'succeeded') {\n//         console.log('Payment successful!');\n//       }\n//     } catch (error) {\n//       console.error('Payment failed:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n//         <CardElement />\n//         <button type=\"submit\" disabled={!stripe}>\n//           Pay Now\n//         </button>\n//       </form>\n\n//       {paymentRequest && (\n//         <PaymentRequestButtonElement\n//           options={{\n//             paymentRequest,\n//             style: {\n//               paymentRequestButton: {\n//                 theme: 'dark',\n//                 height: '64px',\n//               },\n//             },\n//           }}\n//           onClick={() => handlePaymentRequest(paymentRequest)}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// export const Payment = () => (\n//   <div className=\"payment-container\">\n//     <h2>Make Payment</h2>\n//     <div className=\"payment-form-container\">\n//       <h1>Payment Details</h1>\n//       <Elements stripe={stripePromise}>\n//         <CheckoutForm />\n//       </Elements>\n//     </div>\n//   </div>\n// );","map":{"version":3,"names":[],"sources":["C:/Users/ACCESS/Desktop/RideRental/riderental/src/UI/Payment.js"],"sourcesContent":["// import React from 'react';\r\n// import { loadStripe } from '@stripe/stripe-js';\r\n// import { Elements, CardElement, useStripe, useElements, PaymentRequestButtonElement } from '@stripe/react-stripe-js';\r\n// import axios from 'axios';\r\n\r\n// // Replace with your new Stripe public key\r\n// const stripePromise = loadStripe('your-new-publishable-key-here');\r\n\r\n// const CheckoutForm = () => {\r\n//   const stripe = useStripe();\r\n//   const elements = useElements();\r\n\r\n//   const handlePaymentRequest = async (paymentRequest) => {\r\n//     try {\r\n//       const { data: clientSecret } = await axios.post('http://localhost:9093/paymentverification', {\r\n        \r\n//       });\r\n\r\n//       const { error } = await stripe.confirmPayment({\r\n//         elements,\r\n//         confirmParams: {\r\n//           return_url: 'https://your-website.com/checkout/complete', // Replace with your return URL\r\n//         },\r\n//       });\r\n\r\n//       if (error) {\r\n//         console.error(error.message);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Payment failed:', error);\r\n//     }\r\n//   };\r\n\r\n//   const paymentRequest = stripe?.paymentRequest({\r\n//     country: 'US',\r\n//     currency: 'usd',\r\n//     total: {\r\n//       label: 'Total',\r\n//       amount: 1099, // Amount in cents\r\n//     },\r\n//     requestPayerName: true,\r\n//     requestPayerEmail: true,\r\n//   });\r\n\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n\r\n//     if (!stripe || !elements) {\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const { data: clientSecret } = await axios.post('http://localhost:9093/paymentverification', {\r\n        \r\n//       });\r\n\r\n//       const { error, paymentIntent } = await stripe.confirmCardPayment(clientSecret, {\r\n//         payment_method: {\r\n//           card: elements.getElement(CardElement),\r\n//           billing_details: {\r\n//             name: 'Customer Name',\r\n//           },\r\n//         },\r\n//       });\r\n\r\n//       if (error) {\r\n//         console.error(error.message);\r\n//       } else if (paymentIntent.status === 'succeeded') {\r\n//         console.log('Payment successful!');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Payment failed:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <CardElement />\r\n//         <button type=\"submit\" disabled={!stripe}>\r\n//           Pay Now\r\n//         </button>\r\n//       </form>\r\n\r\n//       {paymentRequest && (\r\n//         <PaymentRequestButtonElement\r\n//           options={{\r\n//             paymentRequest,\r\n//             style: {\r\n//               paymentRequestButton: {\r\n//                 theme: 'dark',\r\n//                 height: '64px',\r\n//               },\r\n//             },\r\n//           }}\r\n//           onClick={() => handlePaymentRequest(paymentRequest)}\r\n//         />\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export const Payment = () => (\r\n//   <div className=\"payment-container\">\r\n//     <h2>Make Payment</h2>\r\n//     <div className=\"payment-form-container\">\r\n//       <h1>Payment Details</h1>\r\n//       <Elements stripe={stripePromise}>\r\n//         <CheckoutForm />\r\n//       </Elements>\r\n//     </div>\r\n//   </div>\r\n// );\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}