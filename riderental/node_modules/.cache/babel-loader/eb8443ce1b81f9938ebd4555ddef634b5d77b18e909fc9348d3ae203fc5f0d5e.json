{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACCESS\\\\Desktop\\\\RideRental\\\\riderental\\\\src\\\\Context\\\\UserContext.js\",\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\n\n// Create a provider component\nconst UserProvider = ({\n  children\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [user, setUser] = useState(null);\n\n  // Function to update user data\n  const updateUser = userData => {\n    _s();\n    useEffect(() => {\n      const userid = localStorage.getItem('userid');\n      const Fetchprofile = async () => {\n        const response = await axios.get('http://localhost:9093/userdata/userprofiledata', {\n          params: {\n            id: userid\n          }\n        });\n        if (response.status === 200) {\n          setUser(response.data);\n        }\n      };\n      Fetchprofile();\n    }, []);\n    setUser(userData);\n  };\n  _s(updateUser, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      updateUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s2(UserProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = UserProvider;\nexport { UserProvider, UserContext };\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s2","_s","$RefreshSig$","user","setUser","updateUser","userData","useEffect","userid","localStorage","getItem","Fetchprofile","response","axios","get","params","id","status","data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ACCESS/Desktop/RideRental/riderental/src/Context/UserContext.js"],"sourcesContent":["import React, { createContext, useState} from 'react';\r\n\r\n// Create the context\r\nconst UserContext = createContext();\r\n\r\n// Create a provider component\r\nconst UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  // Function to update user data\r\n  const updateUser = (userData) => {\r\n    useEffect(() => {\r\n        const userid = localStorage.getItem('userid');\r\n        const Fetchprofile = async () => {\r\n          const response = await axios.get('http://localhost:9093/userdata/userprofiledata', {\r\n            params: {\r\n              id: userid\r\n    \r\n            }\r\n          })\r\n          if (response.status === 200) {\r\n            setUser(response.data);\r\n            \r\n          }\r\n        }\r\n        Fetchprofile();\r\n      },[])\r\n    setUser(userData);\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, updateUser }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport { UserProvider, UserContext };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAO,OAAO;;AAErD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;;AAEnC;AACA,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACA,MAAMW,UAAU,GAAIC,QAAQ,IAAK;IAAAL,EAAA;IAC/BM,SAAS,CAAC,MAAM;MACZ,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAC7C,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;QAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,gDAAgD,EAAE;UACjFC,MAAM,EAAE;YACNC,EAAE,EAAER;UAEN;QACF,CAAC,CAAC;QACF,IAAII,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;UAC3Bb,OAAO,CAACQ,QAAQ,CAACM,IAAI,CAAC;QAExB;MACF,CAAC;MACDP,YAAY,CAAC,CAAC;IAChB,CAAC,EAAC,EAAE,CAAC;IACPP,OAAO,CAACE,QAAQ,CAAC;EACnB,CAAC;EAACL,EAAA,CAlBII,UAAU;EAoBhB,oBACET,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,IAAI;MAAEE;IAAW,CAAE;IAAAN,QAAA,EAC/CA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACxB,GAAA,CA7BIF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AA+BlB,SAASA,YAAY,EAAED,WAAW;AAAG,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}