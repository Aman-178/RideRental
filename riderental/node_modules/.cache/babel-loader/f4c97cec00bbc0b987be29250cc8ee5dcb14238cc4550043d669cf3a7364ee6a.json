{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACCESS\\\\Desktop\\\\RideRental\\\\riderental\\\\src\\\\Context\\\\UserContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios'; // Ensure you import axios\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\n\n// Create a provider component\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n\n  // Fetch user profile data from localStorage on component mount\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      const userid = localStorage.getItem('userid');\n      if (userid) {\n        try {\n          const response = await axios.get('http://localhost:9093/userdata/userprofiledata', {\n            params: {\n              id: userid\n            }\n          });\n          if (response.status === 200) {\n            setUser(response.data);\n          }\n        } catch (error) {\n          console.error('Failed to fetch user profile:', error);\n        }\n      }\n    };\n    fetchUserProfile();\n  }, []); // Empty dependency array means this runs once on mount\n\n  // Function to update user data\n  const updateUser = userData => {\n    setUser(userData);\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      updateUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = UserProvider;\nexport { UserProvider, UserContext };\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","fetchUserProfile","userid","localStorage","getItem","response","get","params","id","status","data","error","console","updateUser","userData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ACCESS/Desktop/RideRental/riderental/src/Context/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios'; // Ensure you import axios\r\n\r\n// Create the context\r\nconst UserContext = createContext();\r\n\r\n// Create a provider component\r\nconst UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  // Fetch user profile data from localStorage on component mount\r\n  useEffect(() => {\r\n    const fetchUserProfile = async () => {\r\n      const userid = localStorage.getItem('userid');\r\n      if (userid) {\r\n        try {\r\n          const response = await axios.get('http://localhost:9093/userdata/userprofiledata', {\r\n            params: { id: userid }\r\n          });\r\n          if (response.status === 200) {\r\n            setUser(response.data);\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to fetch user profile:', error);\r\n        }\r\n      }\r\n    };\r\n    \r\n    fetchUserProfile();\r\n  }, []); // Empty dependency array means this runs once on mount\r\n\r\n  // Function to update user data\r\n  const updateUser = (userData) => {\r\n    setUser(userData);\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, updateUser }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport { UserProvider, UserContext };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAC7C,IAAIF,MAAM,EAAE;QACV,IAAI;UACF,MAAMG,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,gDAAgD,EAAE;YACjFC,MAAM,EAAE;cAAEC,EAAE,EAAEN;YAAO;UACvB,CAAC,CAAC;UACF,IAAIG,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;YAC3BT,OAAO,CAACK,QAAQ,CAACK,IAAI,CAAC;UACxB;QACF,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACvD;MACF;IACF,CAAC;IAEDV,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,MAAMY,UAAU,GAAIC,QAAQ,IAAK;IAC/Bd,OAAO,CAACc,QAAQ,CAAC;EACnB,CAAC;EAED,oBACEpB,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,IAAI;MAAEc;IAAW,CAAE;IAAAhB,QAAA,EAC/CA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtB,EAAA,CAlCIF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAoClB,SAASA,YAAY,EAAED,WAAW;AAAG,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}